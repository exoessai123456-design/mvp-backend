{
    "sourceFile": "lib/middleware.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1757263730225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757268138262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,17 @@\n+import jwt from \"jsonwebtoken\";\r\n+\r\n+export default async function middleware(req, res) {\r\n+  const token = req.headers.authorization?.split(\" \")[1];\r\n+  if (!token) {\r\n+    res.status(401).json({ msg: \"No token, auth denied\" });\r\n+    return null;\r\n+  }\r\n+\r\n+  try {\r\n+    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n+    return decoded.admin; // return admin object\r\n+  } catch {\r\n+    res.status(401).json({ msg: \"Token is not valid\" });\r\n+    return null;\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1757439351014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import jwt from \"jsonwebtoken\";\r\n+/* import jwt from \"jsonwebtoken\";\r\n \r\n export default async function middleware(req, res) {\r\n   const token = req.headers.authorization?.split(\" \")[1];\r\n   if (!token) {\r\n@@ -14,22 +14,5 @@\n     res.status(401).json({ msg: \"Token is not valid\" });\r\n     return null;\r\n   }\r\n }\r\n-import jwt from \"jsonwebtoken\";\r\n-\r\n-export default async function middleware(req, res) {\r\n-  const token = req.headers[\"authorization\"]?.split(\" \")[1];\r\n-  if (!token) {\r\n-    res.status(401).json({ msg: \"No token, auth denied\" });\r\n-    return null;\r\n-  }\r\n-\r\n-  try {\r\n-    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n-    req.admin = decoded.admin;\r\n-    return req; // return the full request with admin attached\r\n-  } catch (err) {\r\n-    res.status(401).json({ msg: \"Token is not valid\" });\r\n-    return null;\r\n-  }\r\n-}\r\n+ */\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757439361642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,5 +14,36 @@\n     res.status(401).json({ msg: \"Token is not valid\" });\r\n     return null;\r\n   }\r\n }\r\n- */\n\\ No newline at end of file\n+ */\r\n+\r\n+import jwt from \"jsonwebtoken\";\r\n+\r\n+export default async function middleware(req, res) {\r\n+  // ✅ Always set CORS headers\r\n+  res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n+  res.setHeader(\"Access-Control-Allow-Origin\", \"http://localhost:3001\"); // frontend URL\r\n+  res.setHeader(\"Access-Control-Allow-Methods\", \"GET,POST,PUT,DELETE,OPTIONS\");\r\n+  res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n+\r\n+  // ✅ Handle OPTIONS preflight (don’t check token)\r\n+  if (req.method === \"OPTIONS\") {\r\n+    res.status(200).end();\r\n+    return null; // stop here\r\n+  }\r\n+\r\n+  // ✅ JWT Auth check\r\n+  const token = req.headers.authorization?.split(\" \")[1];\r\n+  if (!token) {\r\n+    res.status(401).json({ msg: \"No token, auth denied\" });\r\n+    return null;\r\n+  }\r\n+\r\n+  try {\r\n+    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n+    return decoded.admin; // return admin object\r\n+  } catch {\r\n+    res.status(401).json({ msg: \"Token is not valid\" });\r\n+    return null;\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1757439497266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,19 @@\n+/* import jwt from \"jsonwebtoken\";\r\n+\r\n+export default async function middleware(req, res) {\r\n+  const token = req.headers.authorization?.split(\" \")[1];\r\n+  if (!token) {\r\n+    res.status(401).json({ msg: \"No token, auth denied\" });\r\n+    return null;\r\n+  }\r\n+\r\n+  try {\r\n+    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n+    return decoded.admin; // return admin object\r\n+  } catch {\r\n+    res.status(401).json({ msg: \"Token is not valid\" });\r\n+    return null;\r\n+  }\r\n+}\r\n+ */\r\n+\r\n"
                },
                {
                    "date": 1757439508705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,53 +16,35 @@\n   }\r\n }\r\n  */\r\n \r\n-/* import jwt from \"jsonwebtoken\";\r\n-\r\n-export default async function middleware(req, res) {\r\n-  const token = req.headers.authorization?.split(\" \")[1];\r\n-  if (!token) {\r\n-    res.status(401).json({ msg: \"No token, auth denied\" });\r\n-    return null;\r\n-  }\r\n-\r\n-  try {\r\n-    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n-    return decoded.admin; // return admin object\r\n-  } catch {\r\n-    res.status(401).json({ msg: \"Token is not valid\" });\r\n-    return null;\r\n-  }\r\n-}\r\n- */\r\n-\r\n+// lib/middleware.js\r\n import jwt from \"jsonwebtoken\";\r\n \r\n-export default async function middleware(req, res) {\r\n-  // ✅ Always set CORS headers\r\n-  res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n-  res.setHeader(\"Access-Control-Allow-Origin\", \"http://localhost:3001\"); // frontend URL\r\n-  res.setHeader(\"Access-Control-Allow-Methods\", \"GET,POST,PUT,DELETE,OPTIONS\");\r\n-  res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n+export async function withAuth(handler) {\r\n+  return async (req, res) => {\r\n+    // ✅ Always set CORS headers\r\n+    res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n+    res.setHeader(\"Access-Control-Allow-Origin\", \"http://localhost:3001\"); // frontend\r\n+    res.setHeader(\"Access-Control-Allow-Methods\", \"GET,POST,PUT,DELETE,OPTIONS\");\r\n+    res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n \r\n-  // ✅ Handle OPTIONS preflight (don’t check token)\r\n-  if (req.method === \"OPTIONS\") {\r\n-    res.status(200).end();\r\n-    return null; // stop here\r\n-  }\r\n+    // ✅ Handle OPTIONS preflight\r\n+    if (req.method === \"OPTIONS\") {\r\n+      return res.status(200).end();\r\n+    }\r\n \r\n-  // ✅ JWT Auth check\r\n-  const token = req.headers.authorization?.split(\" \")[1];\r\n-  if (!token) {\r\n-    res.status(401).json({ msg: \"No token, auth denied\" });\r\n-    return null;\r\n-  }\r\n+    // ✅ JWT check\r\n+    const token = req.headers.authorization?.split(\" \")[1];\r\n+    if (!token) {\r\n+      return res.status(401).json({ msg: \"No token, auth denied\" });\r\n+    }\r\n \r\n-  try {\r\n-    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n-    return decoded.admin; // return admin object\r\n-  } catch {\r\n-    res.status(401).json({ msg: \"Token is not valid\" });\r\n-    return null;\r\n-  }\r\n+    try {\r\n+      const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n+      req.admin = decoded.admin; // attach admin info to request\r\n+      return handler(req, res); // pass to your API handler\r\n+    } catch {\r\n+      return res.status(401).json({ msg: \"Token is not valid\" });\r\n+    }\r\n+  };\r\n }\r\n"
                },
                {
                    "date": 1757439535702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,4 +47,19 @@\n       return res.status(401).json({ msg: \"Token is not valid\" });\r\n     }\r\n   };\r\n }\r\n+\r\n+export function withCors(handler) {\r\n+  return async (req, res) => {\r\n+    res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n+    res.setHeader(\"Access-Control-Allow-Origin\", \"http://localhost:3001\");\r\n+    res.setHeader(\"Access-Control-Allow-Methods\", \"GET,POST,PUT,DELETE,OPTIONS\");\r\n+    res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n+\r\n+    if (req.method === \"OPTIONS\") {\r\n+      return res.status(200).end();\r\n+    }\r\n+\r\n+    return handler(req, res);\r\n+  };\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757440973157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,47 +19,26 @@\n \r\n // lib/middleware.js\r\n import jwt from \"jsonwebtoken\";\r\n \r\n-export async function withAuth(handler) {\r\n-  return async (req, res) => {\r\n-    // ✅ Always set CORS headers\r\n+export function withAuth(handler) {\r\n+  return async (req, res) => { // ✅ this must return a function\r\n+    // CORS headers\r\n     res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n-    res.setHeader(\"Access-Control-Allow-Origin\", \"http://localhost:3001\"); // frontend\r\n+    res.setHeader(\"Access-Control-Allow-Origin\", process.env.FRONTEND_URL || \"http://localhost:3001\");\r\n     res.setHeader(\"Access-Control-Allow-Methods\", \"GET,POST,PUT,DELETE,OPTIONS\");\r\n     res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n \r\n-    // ✅ Handle OPTIONS preflight\r\n-    if (req.method === \"OPTIONS\") {\r\n-      return res.status(200).end();\r\n-    }\r\n+    if (req.method === \"OPTIONS\") return res.status(200).end();\r\n \r\n-    // ✅ JWT check\r\n     const token = req.headers.authorization?.split(\" \")[1];\r\n-    if (!token) {\r\n-      return res.status(401).json({ msg: \"No token, auth denied\" });\r\n-    }\r\n+    if (!token) return res.status(401).json({ msg: \"No token, auth denied\" });\r\n \r\n     try {\r\n       const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n-      req.admin = decoded.admin; // attach admin info to request\r\n-      return handler(req, res); // pass to your API handler\r\n+      req.admin = decoded.admin;\r\n+      return handler(req, res); // ✅ call original handler\r\n     } catch {\r\n       return res.status(401).json({ msg: \"Token is not valid\" });\r\n     }\r\n   };\r\n }\r\n-\r\n-export function withCors(handler) {\r\n-  return async (req, res) => {\r\n-    res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n-    res.setHeader(\"Access-Control-Allow-Origin\", \"http://localhost:3001\");\r\n-    res.setHeader(\"Access-Control-Allow-Methods\", \"GET,POST,PUT,DELETE,OPTIONS\");\r\n-    res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n\\ No newline at end of file\n-\r\n-    if (req.method === \"OPTIONS\") {\r\n-      return res.status(200).end();\r\n-    }\r\n-\r\n-    return handler(req, res);\r\n-  };\r\n-}\n"
                },
                {
                    "date": 1757441067127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+/* import jwt from \"jsonwebtoken\";\r\n+\r\n+export default async function middleware(req, res) {\r\n+  const token = req.headers.authorization?.split(\" \")[1];\r\n+  if (!token) {\r\n+    res.status(401).json({ msg: \"No token, auth denied\" });\r\n+    return null;\r\n+  }\r\n+\r\n+  try {\r\n+    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n+    return decoded.admin; // return admin object\r\n+  } catch {\r\n+    res.status(401).json({ msg: \"Token is not valid\" });\r\n+    return null;\r\n+  }\r\n+}\r\n+ */\r\n+\r\n+// lib/middleware.js\r\n+// lib/middleware.js\r\n+import jwt from \"jsonwebtoken\";\r\n+\r\n+// Public routes\r\n+export function withCors(handler) {\r\n+  return async (req, res) => {\r\n+    res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n+    res.setHeader(\r\n+      \"Access-Control-Allow-Origin\",\r\n+      process.env.FRONTEND_URL || \"http://localhost:3001\"\r\n+    );\r\n+    res.setHeader(\r\n+      \"Access-Control-Allow-Methods\",\r\n+      \"GET,POST,PUT,DELETE,OPTIONS\"\r\n+    );\r\n+    res.setHeader(\r\n+      \"Access-Control-Allow-Headers\",\r\n+      \"Content-Type, Authorization\"\r\n+    );\r\n+\r\n+    if (req.method === \"OPTIONS\") return res.status(200).end();\r\n+\r\n+    return handler(req, res);\r\n+  };\r\n+}\r\n+\r\n+// Private routes\r\n+export function withAuth(handler) {\r\n+  return withCors(async (req, res) => {\r\n+    const token = req.headers.authorization?.split(\" \")[1];\r\n+    if (!token) return res.status(401).json({ msg: \"No token, auth denied\" });\r\n+\r\n+    try {\r\n+      const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n+      req.admin = decoded.admin; // attach admin info\r\n+      return handler(req, res);\r\n+    } catch {\r\n+      return res.status(401).json({ msg: \"Token is not valid\" });\r\n+    }\r\n+  });\r\n+}\r\n"
                },
                {
                    "date": 1757441072256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+/* import jwt from \"jsonwebtoken\";\r\n+\r\n+export default async function middleware(req, res) {\r\n+  const token = req.headers.authorization?.split(\" \")[1];\r\n+  if (!token) {\r\n+    res.status(401).json({ msg: \"No token, auth denied\" });\r\n+    return null;\r\n+  }\r\n+\r\n+  try {\r\n+    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n+    return decoded.admin; // return admin object\r\n+  } catch {\r\n+    res.status(401).json({ msg: \"Token is not valid\" });\r\n+    return null;\r\n+  }\r\n+}\r\n+ */\r\n+\r\n+// lib/middleware.js\r\n+// lib/middleware.js\r\n+import jwt from \"jsonwebtoken\";\r\n+\r\n+// Public routes\r\n+export function withCors(handler) {\r\n+  return async (req, res) => {\r\n+    res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n+    res.setHeader(\r\n+      \"Access-Control-Allow-Origin\",\r\n+      process.env.FRONTEND_URL || \"http://localhost:3001\"\r\n+    );\r\n+    res.setHeader(\r\n+      \"Access-Control-Allow-Methods\",\r\n+      \"GET,POST,PUT,DELETE,OPTIONS\"\r\n+    );\r\n+    res.setHeader(\r\n+      \"Access-Control-Allow-Headers\",\r\n+      \"Content-Type, Authorization\"\r\n+    );\r\n+\r\n+    if (req.method === \"OPTIONS\") return res.status(200).end();\r\n+\r\n+    return handler(req, res);\r\n+  };\r\n+}\r\n+\r\n+// Private routes\r\n+export function withAuth(handler) {\r\n+  return withCors(async (req, res) => {\r\n+    const token = req.headers.authorization?.split(\" \")[1];\r\n+    if (!token) return res.status(401).json({ msg: \"No token, auth denied\" });\r\n+\r\n+    try {\r\n+      const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n+      req.admin = decoded.admin; // attach admin info\r\n+      return handler(req, res);\r\n+    } catch {\r\n+      return res.status(401).json({ msg: \"Token is not valid\" });\r\n+    }\r\n+  });\r\n+}\r\n"
                },
                {
                    "date": 1757441446501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,5 @@\n-/* import jwt from \"jsonwebtoken\";\r\n \r\n-export default async function middleware(req, res) {\r\n-  const token = req.headers.authorization?.split(\" \")[1];\r\n-  if (!token) {\r\n-    res.status(401).json({ msg: \"No token, auth denied\" });\r\n-    return null;\r\n-  }\r\n-\r\n-  try {\r\n-    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n-    return decoded.admin; // return admin object\r\n-  } catch {\r\n-    res.status(401).json({ msg: \"Token is not valid\" });\r\n-    return null;\r\n-  }\r\n-}\r\n- */\r\n-\r\n-// lib/middleware.js\r\n-// lib/middleware.js\r\n import jwt from \"jsonwebtoken\";\r\n \r\n // Public routes\r\n export function withCors(handler) {\r\n@@ -58,109 +38,4 @@\n       return res.status(401).json({ msg: \"Token is not valid\" });\r\n     }\r\n   });\r\n }\r\n-/* import jwt from \"jsonwebtoken\";\r\n-\r\n-export default async function middleware(req, res) {\r\n-  const token = req.headers.authorization?.split(\" \")[1];\r\n-  if (!token) {\r\n-    res.status(401).json({ msg: \"No token, auth denied\" });\r\n-    return null;\r\n-  }\r\n-\r\n-  try {\r\n-    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n-    return decoded.admin; // return admin object\r\n-  } catch {\r\n-    res.status(401).json({ msg: \"Token is not valid\" });\r\n-    return null;\r\n-  }\r\n-}\r\n- */\r\n-\r\n-// lib/middleware.js\r\n-// lib/middleware.js\r\n-import jwt from \"jsonwebtoken\";\r\n-\r\n-// Public routes\r\n-export function withCors(handler) {\r\n-  return async (req, res) => {\r\n-    res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n-    res.setHeader(\r\n-      \"Access-Control-Allow-Origin\",\r\n-      process.env.FRONTEND_URL || \"http://localhost:3001\"\r\n-    );\r\n-    res.setHeader(\r\n-      \"Access-Control-Allow-Methods\",\r\n-      \"GET,POST,PUT,DELETE,OPTIONS\"\r\n-    );\r\n-    res.setHeader(\r\n-      \"Access-Control-Allow-Headers\",\r\n-      \"Content-Type, Authorization\"\r\n-    );\r\n-\r\n-    if (req.method === \"OPTIONS\") return res.status(200).end();\r\n-\r\n-    return handler(req, res);\r\n-  };\r\n-}\r\n-\r\n-// Private routes\r\n-export function withAuth(handler) {\r\n-  return withCors(async (req, res) => {\r\n-    const token = req.headers.authorization?.split(\" \")[1];\r\n-    if (!token) return res.status(401).json({ msg: \"No token, auth denied\" });\r\n-\r\n-    try {\r\n-      const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n-      req.admin = decoded.admin; // attach admin info\r\n-      return handler(req, res);\r\n-    } catch {\r\n-      return res.status(401).json({ msg: \"Token is not valid\" });\r\n-    }\r\n-  });\r\n-}\r\n-/* import jwt from \"jsonwebtoken\";\r\n-\r\n-export default async function middleware(req, res) {\r\n-  const token = req.headers.authorization?.split(\" \")[1];\r\n-  if (!token) {\r\n-    res.status(401).json({ msg: \"No token, auth denied\" });\r\n-    return null;\r\n-  }\r\n-\r\n-  try {\r\n-    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n-    return decoded.admin; // return admin object\r\n-  } catch {\r\n-    res.status(401).json({ msg: \"Token is not valid\" });\r\n-    return null;\r\n-  }\r\n-}\r\n- */\r\n-\r\n-// lib/middleware.js\r\n-import jwt from \"jsonwebtoken\";\r\n-\r\n-export function withAuth(handler) {\r\n-  return async (req, res) => { // ✅ this must return a function\r\n-    // CORS headers\r\n-    res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n-    res.setHeader(\"Access-Control-Allow-Origin\", process.env.FRONTEND_URL || \"http://localhost:3001\");\r\n-    res.setHeader(\"Access-Control-Allow-Methods\", \"GET,POST,PUT,DELETE,OPTIONS\");\r\n-    res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n-\r\n-    if (req.method === \"OPTIONS\") return res.status(200).end();\r\n-\r\n-    const token = req.headers.authorization?.split(\" \")[1];\r\n-    if (!token) return res.status(401).json({ msg: \"No token, auth denied\" });\r\n-\r\n-    try {\r\n-      const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n-      req.admin = decoded.admin;\r\n-      return handler(req, res); // ✅ call original handler\r\n-    } catch {\r\n-      return res.status(401).json({ msg: \"Token is not valid\" });\r\n-    }\r\n-  };\r\n-}\r\n"
                },
                {
                    "date": 1757441639646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,13 @@\n-\r\n import jwt from \"jsonwebtoken\";\r\n \r\n // Public routes\r\n export function withCors(handler) {\r\n   return async (req, res) => {\r\n     res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n     res.setHeader(\r\n       \"Access-Control-Allow-Origin\",\r\n-      process.env.FRONTEND_URL || \"http://localhost:3001\"\r\n+      process.env.FRONTEND_URL\r\n     );\r\n     res.setHeader(\r\n       \"Access-Control-Allow-Methods\",\r\n       \"GET,POST,PUT,DELETE,OPTIONS\"\r\n"
                }
            ],
            "date": 1757263730225,
            "name": "Commit-0",
            "content": "import jwt from \"jsonwebtoken\";\r\n\r\nexport default async function middleware(req, res) {\r\n  const token = req.headers[\"authorization\"]?.split(\" \")[1];\r\n  if (!token) {\r\n    res.status(401).json({ msg: \"No token, auth denied\" });\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n    req.admin = decoded.admin;\r\n    return req; // return the full request with admin attached\r\n  } catch (err) {\r\n    res.status(401).json({ msg: \"Token is not valid\" });\r\n    return null;\r\n  }\r\n}\r\n"
        }
    ]
}