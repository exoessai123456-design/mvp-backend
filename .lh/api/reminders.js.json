{
    "sourceFile": "api/reminders.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1757263809092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757267597165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n-// /api/reminders.js\r\n-import { connectDB, Event } from \"../../lib/db\";\r\n+import connectDB, { Event } from \"../../lib/db.js\";\r\n import nodemailer from \"nodemailer\";\r\n \r\n-connectDB();\r\n-\r\n export default async function handler(req, res) {\r\n-  if (req.method !== \"POST\") return res.status(405).json({ msg: \"Method not allowed\" });\r\n+  await connectDB();\r\n \r\n+  if (req.method !== \"POST\")\r\n+    return res.status(405).json({ msg: \"Method not allowed\" });\r\n+\r\n   const now = new Date();\r\n   const fiveMinutesLater = new Date(now.getTime() + 5 * 60000);\r\n \r\n   const events = await Event.find({\r\n@@ -26,11 +26,8 @@\n       to: event.createdBy,\r\n       subject: `Reminder: \"${event.title}\" event in 5 minutes`,\r\n       text: `Your event \"${event.title}\" is scheduled at ${event.date}`,\r\n     });\r\n-\r\n-    // optional: update job status\r\n-    // await fetch(`${process.env.BASE_URL}/api/jobs/${event._id}`, { ... });\r\n   }\r\n \r\n   return res.json({ sent: events.length });\r\n }\r\n"
                },
                {
                    "date": 1757268954736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n-import connectDB, { Event } from \"../../lib/db.js\";\r\n+// /api/reminder.js\r\n+import { connectDB, Event } from \"../../lib/db.js\";\r\n import nodemailer from \"nodemailer\";\r\n \r\n export default async function handler(req, res) {\r\n+  if (req.method !== \"GET\") return res.status(405).json({ msg: \"Method not allowed\" });\r\n+\r\n   await connectDB();\r\n \r\n-  if (req.method !== \"POST\")\r\n-    return res.status(405).json({ msg: \"Method not allowed\" });\r\n-\r\n   const now = new Date();\r\n   const fiveMinutesLater = new Date(now.getTime() + 5 * 60000);\r\n \r\n   const events = await Event.find({\r\n"
                },
                {
                    "date": 1757269140180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,32 @@\n+// /api/reminder.js\r\n+import { connectDB, Event } from \"../../lib/db.js\";import nodemailer from \"nodemailer\";\r\n+\r\n+export default async function handler(req, res) {\r\n+  if (req.method !== \"GET\") return res.status(405).json({ msg: \"Method not allowed\" });\r\n+\r\n+  await connectDB();\r\n+\r\n+  const now = new Date();\r\n+  const fiveMinutesLater = new Date(now.getTime() + 5 * 60000);\r\n+\r\n+  const events = await Event.find({\r\n+    status: \"CONFIRMED\",\r\n+    date: { $lte: fiveMinutesLater, $gte: now },\r\n+  });\r\n+\r\n+  const transporter = nodemailer.createTransport({\r\n+    service: \"gmail\",\r\n+    auth: { user: process.env.ADMIN_EMAIL, pass: process.env.ADMIN_PASS },\r\n+  });\r\n+\r\n+  for (const event of events) {\r\n+    await transporter.sendMail({\r\n+      from: process.env.ADMIN_EMAIL,\r\n+      to: event.createdBy,\r\n+      subject: `Reminder: \"${event.title}\" event in 5 minutes`,\r\n+      text: `Your event \"${event.title}\" is scheduled at ${event.date}`,\r\n+    });\r\n+  }\r\n+\r\n+  return res.json({ sent: events.length });\r\n+}\r\n"
                },
                {
                    "date": 1757269153362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,38 +1,6 @@\n // /api/reminder.js\r\n-import { connectDB, Event } from \"../../lib/db.js\";import nodemailer from \"nodemailer\";\r\n-\r\n-export default async function handler(req, res) {\r\n-  if (req.method !== \"GET\") return res.status(405).json({ msg: \"Method not allowed\" });\r\n-\r\n-  await connectDB();\r\n-\r\n-  const now = new Date();\r\n-  const fiveMinutesLater = new Date(now.getTime() + 5 * 60000);\r\n-\r\n-  const events = await Event.find({\r\n-    status: \"CONFIRMED\",\r\n-    date: { $lte: fiveMinutesLater, $gte: now },\r\n-  });\r\n-\r\n-  const transporter = nodemailer.createTransport({\r\n-    service: \"gmail\",\r\n-    auth: { user: process.env.ADMIN_EMAIL, pass: process.env.ADMIN_PASS },\r\n-  });\r\n-\r\n-  for (const event of events) {\r\n-    await transporter.sendMail({\r\n-      from: process.env.ADMIN_EMAIL,\r\n-      to: event.createdBy,\r\n-      subject: `Reminder: \"${event.title}\" event in 5 minutes`,\r\n-      text: `Your event \"${event.title}\" is scheduled at ${event.date}`,\r\n-    });\r\n-  }\r\n-\r\n-  return res.json({ sent: events.length });\r\n-}\r\n-// /api/reminder.js\r\n-import { connectDB, Event } from \"../../lib/db.js\";\r\n+import { connectDB, Event } from \"../../lib/\";\r\n import nodemailer from \"nodemailer\";\r\n \r\n export default async function handler(req, res) {\r\n   if (req.method !== \"GET\") return res.status(405).json({ msg: \"Method not allowed\" });\r\n"
                },
                {
                    "date": 1757269158444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,33 @@\n+// /api/reminder.js\r\n+import { connectDB, Event } from \"../../lib/d\";\r\n+import nodemailer from \"nodemailer\";\r\n+\r\n+export default async function handler(req, res) {\r\n+  if (req.method !== \"GET\") return res.status(405).json({ msg: \"Method not allowed\" });\r\n+\r\n+  await connectDB();\r\n+\r\n+  const now = new Date();\r\n+  const fiveMinutesLater = new Date(now.getTime() + 5 * 60000);\r\n+\r\n+  const events = await Event.find({\r\n+    status: \"CONFIRMED\",\r\n+    date: { $lte: fiveMinutesLater, $gte: now },\r\n+  });\r\n+\r\n+  const transporter = nodemailer.createTransport({\r\n+    service: \"gmail\",\r\n+    auth: { user: process.env.ADMIN_EMAIL, pass: process.env.ADMIN_PASS },\r\n+  });\r\n+\r\n+  for (const event of events) {\r\n+    await transporter.sendMail({\r\n+      from: process.env.ADMIN_EMAIL,\r\n+      to: event.createdBy,\r\n+      subject: `Reminder: \"${event.title}\" event in 5 minutes`,\r\n+      text: `Your event \"${event.title}\" is scheduled at ${event.date}`,\r\n+    });\r\n+  }\r\n+\r\n+  return res.json({ sent: events.length });\r\n+}\r\n"
                },
                {
                    "date": 1757269163826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,33 @@\n+// /api/reminder.js\r\n+import { connectDB, Event } from \"../lib/\";\r\n+import nodemailer from \"nodemailer\";\r\n+\r\n+export default async function handler(req, res) {\r\n+  if (req.method !== \"GET\") return res.status(405).json({ msg: \"Method not allowed\" });\r\n+\r\n+  await connectDB();\r\n+\r\n+  const now = new Date();\r\n+  const fiveMinutesLater = new Date(now.getTime() + 5 * 60000);\r\n+\r\n+  const events = await Event.find({\r\n+    status: \"CONFIRMED\",\r\n+    date: { $lte: fiveMinutesLater, $gte: now },\r\n+  });\r\n+\r\n+  const transporter = nodemailer.createTransport({\r\n+    service: \"gmail\",\r\n+    auth: { user: process.env.ADMIN_EMAIL, pass: process.env.ADMIN_PASS },\r\n+  });\r\n+\r\n+  for (const event of events) {\r\n+    await transporter.sendMail({\r\n+      from: process.env.ADMIN_EMAIL,\r\n+      to: event.createdBy,\r\n+      subject: `Reminder: \"${event.title}\" event in 5 minutes`,\r\n+      text: `Your event \"${event.title}\" is scheduled at ${event.date}`,\r\n+    });\r\n+  }\r\n+\r\n+  return res.json({ sent: events.length });\r\n+}\r\n"
                },
                {
                    "date": 1757269171309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n // /api/reminder.js\r\n-import { connectDB, Event } from \"../lib/\";\r\n+import { connectDB, Event } from \"../lib/db.js\";\r\n import nodemailer from \"nodemailer\";\r\n \r\n export default async function handler(req, res) {\r\n   if (req.method !== \"GET\") return res.status(405).json({ msg: \"Method not allowed\" });\r\n@@ -30,70 +30,4 @@\n   }\r\n \r\n   return res.json({ sent: events.length });\r\n }\r\n-// /api/reminder.js\r\n-import { connectDB, Event } from \"../../lib/d\";\r\n-import nodemailer from \"nodemailer\";\r\n-\r\n-export default async function handler(req, res) {\r\n-  if (req.method !== \"GET\") return res.status(405).json({ msg: \"Method not allowed\" });\r\n-\r\n-  await connectDB();\r\n-\r\n-  const now = new Date();\r\n-  const fiveMinutesLater = new Date(now.getTime() + 5 * 60000);\r\n-\r\n-  const events = await Event.find({\r\n-    status: \"CONFIRMED\",\r\n-    date: { $lte: fiveMinutesLater, $gte: now },\r\n-  });\r\n-\r\n-  const transporter = nodemailer.createTransport({\r\n-    service: \"gmail\",\r\n-    auth: { user: process.env.ADMIN_EMAIL, pass: process.env.ADMIN_PASS },\r\n-  });\r\n-\r\n-  for (const event of events) {\r\n-    await transporter.sendMail({\r\n-      from: process.env.ADMIN_EMAIL,\r\n-      to: event.createdBy,\r\n-      subject: `Reminder: \"${event.title}\" event in 5 minutes`,\r\n-      text: `Your event \"${event.title}\" is scheduled at ${event.date}`,\r\n-    });\r\n-  }\r\n-\r\n-  return res.json({ sent: events.length });\r\n-}\r\n-// /api/reminder.js\r\n-import { connectDB, Event } from \"../../lib/\";\r\n-import nodemailer from \"nodemailer\";\r\n-\r\n-export default async function handler(req, res) {\r\n-  if (req.method !== \"GET\") return res.status(405).json({ msg: \"Method not allowed\" });\r\n-\r\n-  await connectDB();\r\n-\r\n-  const now = new Date();\r\n-  const fiveMinutesLater = new Date(now.getTime() + 5 * 60000);\r\n-\r\n-  const events = await Event.find({\r\n-    status: \"CONFIRMED\",\r\n-    date: { $lte: fiveMinutesLater, $gte: now },\r\n-  });\r\n-\r\n-  const transporter = nodemailer.createTransport({\r\n-    service: \"gmail\",\r\n-    auth: { user: process.env.ADMIN_EMAIL, pass: process.env.ADMIN_PASS },\r\n-  });\r\n-\r\n-  for (const event of events) {\r\n-    await transporter.sendMail({\r\n-      from: process.env.ADMIN_EMAIL,\r\n-      to: event.createdBy,\r\n-      subject: `Reminder: \"${event.title}\" event in 5 minutes`,\r\n-      text: `Your event \"${event.title}\" is scheduled at ${event.date}`,\r\n-    });\r\n-  }\r\n-\r\n-  return res.json({ sent: events.length });\r\n-}\r\n"
                }
            ],
            "date": 1757263809092,
            "name": "Commit-0",
            "content": "// /api/reminders.js\r\nimport { connectDB, Event } from \"../../lib/db\";\r\nimport nodemailer from \"nodemailer\";\r\n\r\nconnectDB();\r\n\r\nexport default async function handler(req, res) {\r\n  if (req.method !== \"POST\") return res.status(405).json({ msg: \"Method not allowed\" });\r\n\r\n  const now = new Date();\r\n  const fiveMinutesLater = new Date(now.getTime() + 5 * 60000);\r\n\r\n  const events = await Event.find({\r\n    status: \"CONFIRMED\",\r\n    date: { $lte: fiveMinutesLater, $gte: now },\r\n  });\r\n\r\n  const transporter = nodemailer.createTransport({\r\n    service: \"gmail\",\r\n    auth: { user: process.env.ADMIN_EMAIL, pass: process.env.ADMIN_PASS },\r\n  });\r\n\r\n  for (const event of events) {\r\n    await transporter.sendMail({\r\n      from: process.env.ADMIN_EMAIL,\r\n      to: event.createdBy,\r\n      subject: `Reminder: \"${event.title}\" event in 5 minutes`,\r\n      text: `Your event \"${event.title}\" is scheduled at ${event.date}`,\r\n    });\r\n\r\n    // optional: update job status\r\n    // await fetch(`${process.env.BASE_URL}/api/jobs/${event._id}`, { ... });\r\n  }\r\n\r\n  return res.json({ sent: events.length });\r\n}\r\n"
        }
    ]
}