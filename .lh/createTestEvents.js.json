{
    "sourceFile": "createTestEvents.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1757275959831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757276058340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n-import connectDB, { Event } from \"../lib/db.js\";\r\n+const connectDB = require(\"../lib/db.js\").default;\r\n+const { Event } = require(\"../lib/db.js\");\r\n \r\n async function createTestEvents() {\r\n   await connectDB();\r\n \r\n   const now = new Date();\r\n \r\n-  // Event 1: CONFIRMED (should send email and create job with status \"SENT\")\r\n-  const confirmedEventDate = new Date(now.getTime() + 2 * 60000); // 2 minutes from now\r\n+  const confirmedEventDate = new Date(now.getTime() + 2 * 60000);\r\n   const confirmedEvent = new Event({\r\n     title: \"Confirmed Test Event\",\r\n     date: confirmedEventDate.toISOString(),\r\n     name: \"Alice\",\r\n@@ -18,10 +18,9 @@\n   });\r\n   await confirmedEvent.save();\r\n   console.log(\"Confirmed event created:\", confirmedEvent);\r\n \r\n-  // Event 2: CANCELLED (should create job with status \"FAILED\" and motifFailure \"CANCELLED\")\r\n-  const cancelledEventDate = new Date(now.getTime() + 3 * 60000); // 3 minutes from now\r\n+  const cancelledEventDate = new Date(now.getTime() + 3 * 60000);\r\n   const cancelledEvent = new Event({\r\n     title: \"Cancelled Test Event\",\r\n     date: cancelledEventDate.toISOString(),\r\n     name: \"Bob\",\r\n"
                },
                {
                    "date": 1757276149603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,41 +1,40 @@\n-const connectDB = require(\"../lib/db.js\").default;\r\n-const { Event } = require(\"../lib/db.js\");\r\n+// createTestEvents.js\r\n+const connectDB = require(\"./lib/db.js\").default;\r\n+const { Event } = require(\"./lib/db.js\");\r\n \r\n async function createTestEvents() {\r\n   await connectDB();\r\n \r\n   const now = new Date();\r\n \r\n-  const confirmedEventDate = new Date(now.getTime() + 2 * 60000);\r\n+  // Event 1: CONFIRMED, 5 minutes from now\r\n   const confirmedEvent = new Event({\r\n-    title: \"Confirmed Test Event\",\r\n-    date: confirmedEventDate.toISOString(),\r\n-    name: \"Alice\",\r\n-    phone: \"123456789\",\r\n-    type: \"Meeting\",\r\n+    title: \"Test Confirmed Event\",\r\n+    date: new Date(now.getTime() + 5 * 60000), // 5 minutes from now\r\n+    createdBy: \"testuser@example.com\",\r\n     status: \"CONFIRMED\",\r\n-    createdBy: \"alice@example.com\",\r\n   });\r\n-  await confirmedEvent.save();\r\n-  console.log(\"Confirmed event created:\", confirmedEvent);\r\n \r\n-  const cancelledEventDate = new Date(now.getTime() + 3 * 60000);\r\n+  // Event 2: CANCELLED, 5 minutes from now\r\n   const cancelledEvent = new Event({\r\n-    title: \"Cancelled Test Event\",\r\n-    date: cancelledEventDate.toISOString(),\r\n-    name: \"Bob\",\r\n-    phone: \"987654321\",\r\n-    type: \"Call\",\r\n+    title: \"Test Cancelled Event\",\r\n+    date: new Date(now.getTime() + 5 * 60000),\r\n+    createdBy: \"testuser@example.com\",\r\n     status: \"CANCELLED\",\r\n-    createdBy: \"bob@example.com\",\r\n   });\r\n-  await cancelledEvent.save();\r\n-  console.log(\"Cancelled event created:\", cancelledEvent);\r\n \r\n-  process.exit();\r\n+  try {\r\n+    const savedConfirmed = await confirmedEvent.save();\r\n+    const savedCancelled = await cancelledEvent.save();\r\n+\r\n+    console.log(\"✅ Test events created:\");\r\n+    console.log(\"Confirmed Event:\", savedConfirmed);\r\n+    console.log(\"Cancelled Event:\", savedCancelled);\r\n+  } catch (err) {\r\n+    console.error(\"❌ Error creating test events:\", err);\r\n+  } finally {\r\n+    process.exit(0);\r\n+  }\r\n }\r\n \r\n-createTestEvents().catch((err) => {\r\n-  console.error(err);\r\n-  process.exit(1);\r\n-});\r\n+createTestEvents();\r\n"
                },
                {
                    "date": 1757276238105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,20 +6,18 @@\n   await connectDB();\r\n \r\n   const now = new Date();\r\n \r\n-  // Event 1: CONFIRMED, 5 minutes from now\r\n   const confirmedEvent = new Event({\r\n     title: \"Test Confirmed Event\",\r\n-    date: new Date(now.getTime() + 5 * 60000), // 5 minutes from now\r\n+    date: new Date(now.getTime() + 10000), // 10 seconds from now\r\n     createdBy: \"testuser@example.com\",\r\n     status: \"CONFIRMED\",\r\n   });\r\n \r\n-  // Event 2: CANCELLED, 5 minutes from now\r\n   const cancelledEvent = new Event({\r\n     title: \"Test Cancelled Event\",\r\n-    date: new Date(now.getTime() + 5 * 60000),\r\n+    date: new Date(now.getTime() + 10000),\r\n     createdBy: \"testuser@example.com\",\r\n     status: \"CANCELLED\",\r\n   });\r\n \r\n"
                }
            ],
            "date": 1757275959831,
            "name": "Commit-0",
            "content": "import connectDB, { Event } from \"../lib/db.js\";\r\n\r\nasync function createTestEvents() {\r\n  await connectDB();\r\n\r\n  const now = new Date();\r\n\r\n  // Event 1: CONFIRMED (should send email and create job with status \"SENT\")\r\n  const confirmedEventDate = new Date(now.getTime() + 2 * 60000); // 2 minutes from now\r\n  const confirmedEvent = new Event({\r\n    title: \"Confirmed Test Event\",\r\n    date: confirmedEventDate.toISOString(),\r\n    name: \"Alice\",\r\n    phone: \"123456789\",\r\n    type: \"Meeting\",\r\n    status: \"CONFIRMED\",\r\n    createdBy: \"alice@example.com\",\r\n  });\r\n  await confirmedEvent.save();\r\n  console.log(\"Confirmed event created:\", confirmedEvent);\r\n\r\n  // Event 2: CANCELLED (should create job with status \"FAILED\" and motifFailure \"CANCELLED\")\r\n  const cancelledEventDate = new Date(now.getTime() + 3 * 60000); // 3 minutes from now\r\n  const cancelledEvent = new Event({\r\n    title: \"Cancelled Test Event\",\r\n    date: cancelledEventDate.toISOString(),\r\n    name: \"Bob\",\r\n    phone: \"987654321\",\r\n    type: \"Call\",\r\n    status: \"CANCELLED\",\r\n    createdBy: \"bob@example.com\",\r\n  });\r\n  await cancelledEvent.save();\r\n  console.log(\"Cancelled event created:\", cancelledEvent);\r\n\r\n  process.exit();\r\n}\r\n\r\ncreateTestEvents().catch((err) => {\r\n  console.error(err);\r\n  process.exit(1);\r\n});\r\n"
        }
    ]
}